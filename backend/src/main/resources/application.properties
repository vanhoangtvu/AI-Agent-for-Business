# ========================================
# SERVER CONFIGURATION
# ========================================
server.port=8087
server.address=0.0.0.0
server.servlet.context-path=/api/v1

# ========================================
# APPLICATION INFO
# ========================================
spring.application.name=ai-agent-business

# ========================================
# DATABASE CONFIGURATION (MySQL 8.0+)
# ========================================
spring.datasource.url=jdbc:mysql://localhost:3306/AI_Agent_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:1111}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Connection Pool (HikariCP)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# ========================================
# JPA / HIBERNATE CONFIGURATION
# ========================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# ========================================
# REDIS CONFIGURATION
# ========================================
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=60000

# Redis Jedis Pool
spring.data.redis.jedis.pool.max-active=8
spring.data.redis.jedis.pool.max-idle=8
spring.data.redis.jedis.pool.min-idle=0
spring.data.redis.jedis.pool.max-wait=-1ms

# ========================================
# FILE UPLOAD CONFIGURATION
# ========================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.file-size-threshold=2MB

# ========================================
# JWT CONFIGURATION
# ========================================
jwt.secret=${JWT_SECRET:YourSuperSecretKeyForJWTTokenGenerationThatIsVeryLongAndSecure123456789}
jwt.expiration=86400000
jwt.refresh-expiration=604800000

# ========================================
# GOOGLE GEMINI AI CONFIGURATION
# ========================================
gemini.api-key=${GEMINI_API_KEY:your-gemini-api-key}
gemini.api-url=https://generativelanguage.googleapis.com/v1/models
gemini.model=gemini-pro
gemini.embedding-model=text-embedding-004
gemini.max-tokens=2048
gemini.temperature=0.7

# ========================================
# VECTOR DATABASE CONFIGURATION
# ========================================
vector-db.type=${VECTOR_DB_TYPE:PINECONE}

# Pinecone
vector-db.pinecone.api-key=${PINECONE_API_KEY:your-pinecone-api-key}
vector-db.pinecone.environment=${PINECONE_ENV:us-east1-gcp}
vector-db.pinecone.index-name=${PINECONE_INDEX:ai-agent-business}

# pgvector (Alternative)
vector-db.pgvector.url=jdbc:postgresql://localhost:5432/vector_db
vector-db.pgvector.username=${PGVECTOR_USER:postgres}
vector-db.pgvector.password=${PGVECTOR_PASSWORD:password}

# ========================================
# ZALO INTEGRATION CONFIGURATION
# ========================================
# Zalo Official Account
zalo.oa.app-id=${ZALO_OA_APP_ID:}
zalo.oa.app-secret=${ZALO_OA_APP_SECRET:}
zalo.oa.webhook-url=${ZALO_OA_WEBHOOK_URL:}

# Zalo Personal Account
zalo.personal.enabled=${ZALO_PERSONAL_ENABLED:true}
zalo.personal.qr-timeout=300000

# ========================================
# CORS CONFIGURATION
# ========================================
cors.allowed-origins=${CORS_ORIGINS:http://localhost:3007,http://localhost:3000,http://113.170.159.180:3007}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
cors.allowed-headers=*
cors.exposed-headers=Authorization
cors.allow-credentials=true
cors.max-age=3600

# ========================================
# WEBSOCKET CONFIGURATION
# ========================================
websocket.endpoint=/ws
websocket.allowed-origins=${WS_ORIGINS:http://localhost:3007,http://localhost:3000,http://113.170.159.180:3007}
websocket.max-session-idle-timeout=1800000

# ========================================
# LOGGING CONFIGURATION
# ========================================
logging.level.root=INFO
logging.level.com.aiagent.business=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Log Pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Log File
logging.file.name=logs/ai-agent-business.log
logging.file.max-size=10MB
logging.file.max-history=30

# ========================================
# ACTUATOR CONFIGURATION (Monitoring)
# ========================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always

# ========================================
# SWAGGER / OPENAPI CONFIGURATION
# ========================================
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.default-produces-media-type=application/json
springdoc.default-consumes-media-type=application/json

